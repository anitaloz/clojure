(ns mire ; Объявление пространства имен "mire"
    (:use [mire commands]) ; Импорт модуля commands из того же проекта
    (:use [clojure.contrib server-socket duck-streams])) ; Импорт библиотек для сокетов и потоков

(def port 3333) ; Определение порта для сервера
(def prompt "> ") ; Определение строки приглашения для пользователя

(defn- mire-handle-client [in out] ; Приватная функция для обработки клиентских подключений
       (binding [*in* (reader in) ; Привязка стандартного ввода к читателю входного потока
                 *out* (writer out)] ; Привязка стандартного вывода к писателю выходного потока
                (print prompt) (flush) ; Вывод приглашения и сброс буфера
                (loop [input (read-line)] ; Начало цикла с чтением первой строки от клиента
                      (println (execute input)) ; Выполнение команды и вывод результата
                      (print prompt) ; Вывод приглашения для следующей команды
                      (flush) ; Сброс буфера вывода
                      (recur (read-line))))) ; Рекурсивный вызов цикла с чтением следующей строки

(def server (create-server port mire-handle-client)) ; Создание сервера на указанном порту