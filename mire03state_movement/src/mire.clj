#!/usr/bin/env clj

(ns mire ; Объявление пространства имен "mire"
    (:use [mire commands rooms]) ; Импорт модулей commands и rooms из того же проекта
    (:use [clojure.contrib server-socket duck-streams])) ; Импорт библиотек для работы с сокетами и потоками

(def port 3333) ; Определение порта, на котором будет работать сервер
(def prompt "> ") ; Определение строки приглашения для ввода команд

(defn- mire-handle-client [in out] ; Приватная функция для обработки клиентских подключений
       (binding [*in* (reader in) ; Привязка стандартного ввода к читателю входного потока клиента
                 *out* (writer out)] ; Привязка стандартного вывода к писателю выходного потока клиента
                (println (look)) ; При подключении клиента выводит описание начальной комнаты
                (print prompt) (flush) ; Вывод приглашения для ввода и сброс буфера вывода
                (loop [input (read-line)] ; Начало цикла с чтением первой строки от клиента
                      (println (execute input)) ; Выполнение команды и вывод результата
                      (print prompt) ; Вывод приглашения для следующей команды
                      (flush) ; Сброс буфера вывода
                      (recur (read-line))))) ; Рекурсивный вызов цикла с чтением следующей строки

(def server (create-server port mire-handle-client)) ; Создание TCP-сервера на указанном порту с указанным обработчиком клиентов